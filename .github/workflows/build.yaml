name: Build
on:
  push:
    branches:
      - main
  pull_request:

env:
  VENDOR_CACHE_KEY: vendor-${{ github.run_id }}-${{ github.sha }}

jobs:
  pre_job:
    continue-on-error: true
    name: "Determine already built commit"
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          skip_after_successful_duplicate: 'true'

  pre_install:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    name: "Install Dependencies"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@2.32.0
        with:
          php-version: 8.4
          tools: composer

      - name: Install dependencies
        uses: ramsey/composer-install@v3
        with:
          composer-options: --no-progress --prefer-dist --optimize-autoloader
        env:
          SKIP_PROJECT_SETUP: 1

      - name: Cache vendor
        uses: actions/cache/save@v4
        with:
          key: ${{ env.VENDOR_CACHE_KEY }}
          path: |
            vendor/

  tests:
    name: "PHPUnit tests"
    runs-on: "ubuntu-latest"
    needs: "pre_install"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@2.32.0
        with:
          php-version: 8.4
          tools: composer

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          key: ${{ env.VENDOR_CACHE_KEY }}
          fail-on-cache-miss: true
          path: |
            vendor/

      - name: Run tests
        run: composer test

  cleanup-cache:
    if: needs.pre_job.outputs.should_skip != 'true'
    needs: [ "tests" ]
    runs-on: ubuntu-latest
    name: "Cleanup Cache"
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          
          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          gh actions-cache delete $VENDOR_CACHE_KEY -R $REPO --confirm
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
